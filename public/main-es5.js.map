{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/assignations/assignations.component.html","./src/app/components/assignations/assignations.component.ts","./src/app/components/assigned-tasks/assigned-tasks.component.html","./src/app/components/assigned-tasks/assigned-tasks.component.ts","./src/app/components/by-category/by-category.component.html","./src/app/components/by-category/by-category.component.ts","./src/app/components/categories/categories.component.html","./src/app/components/categories/categories.component.ts","./src/app/components/history/history.component.html","./src/app/components/history/history.component.ts","./src/app/components/importants/importants.component.html","./src/app/components/importants/importants.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/main/main.component.html","./src/app/components/main/main.component.ts","./src/app/components/menu/menu.component.html","./src/app/components/menu/menu.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.component.ts","./src/app/components/secondary/secondary.component.html","./src/app/components/secondary/secondary.component.ts","./src/app/models/assignation.ts","./src/app/models/category.ts","./src/app/models/task.ts","./src/app/models/user.ts","./src/app/pipes/orderTask.pipe.ts","./src/app/services/assignation.service.ts","./src/app/services/category.service.ts","./src/app/services/global.service.ts","./src/app/services/task.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div id=\"main-container\">\n    <router-outlet></router-outlet>\n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meorganizo-client';\n}\n","import { BrowserModule }                    from '@angular/platform-browser';\nimport { NgModule }                         from '@angular/core';\nimport { HttpClientModule }                 from '@angular/common/http';\nimport { FormsModule }                      from '@angular/forms';\n\nimport { AppComponent }                     from './app.component';\n\n// Custom components\nimport { LoginComponent }                   from './components/login/login.component';\n\n// Pipes\nimport { TaskOrderPipe }                    from './pipes/orderTask.pipe';\n\n// Router\nimport { routing, appRoutingProvider }      from './app.routing';\nimport { RegisterComponent }                from './components/register/register.component';\nimport { MenuComponent }                    from './components/menu/menu.component';\nimport { MainComponent } from './components/main/main.component';\nimport { ImportantsComponent } from './components/importants/importants.component';\nimport { SecondaryComponent } from './components/secondary/secondary.component';\nimport { ByCategoryComponent } from './components/by-category/by-category.component';\nimport { CategoriesComponent } from './components/categories/categories.component';\nimport { AssignationsComponent } from './components/assignations/assignations.component';\nimport { AssignedTasksComponent } from './components/assigned-tasks/assigned-tasks.component';\nimport { HistoryComponent } from './components/history/history.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        RegisterComponent,\n        MenuComponent,\n        MainComponent,\n        ImportantsComponent,\n        TaskOrderPipe,\n        SecondaryComponent,\n        ByCategoryComponent,\n        CategoriesComponent,\n        AssignationsComponent,\n        AssignedTasksComponent,\n        HistoryComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        routing\n    ],\n    providers: [appRoutingProvider],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<header class='header'>\n    <h1>{{ title }}</h1>\n    <div (click)='openNewAssignation()' class='add-assignation'>\n        <i class='icon-add'\n           class=\"fa fa-plus-circle fa-2x\"></i>\n    </div>\n</header>\n<div class=\"assignations-section\">\n    <article *ngIf='newAssignation' class='assignation-section'>\n        <form #newAssignationForm='ngForm'>\n            <label for=\"newAssignation\">Nombre</label>\n            <input type='text'\n                   class='newAssignation'\n                   name='newAssignation'\n                   #newAssignation\n                   [(ngModel)]='newAssignationDescription'\n                   required>\n            <div class='icons-bar'>\n                <button (click)='closeNewAssignation()'><i class=\"fas fa-times-circle\"></i></button>\n                <button [disabled]='!newAssignationForm.valid' (click)='createAssignation(newAssignationDescription)'><i class=\"fas fa-save\"></i></button>\n            </div>\n        </form>\n    </article>\n    <article *ngFor='let assignation of assignations' class='assignation-section'>\n        <div class=\"clearfix\"></div>\n        <p contenteditable='true'\n           spellcheck='false'\n           [textContent]='assignation.name'\n           (input)=\"assignation.name=$event.target.textContent\"\n           (keypress)='clearErrors()'\n           required>\n        </p>\n        <div class='icons-bar'>\n            <button (click)='deleteAssignation(assignation._id)' title='Eliminar asignación'><i class=\"fas fa-trash-alt\"></i></button>\n            <button (click)='updateAssignation(assignation._id, assignation.name)' title='Guardar asignación'><i class=\"fas fa-save\"></i></button>\n        </div>\n    </article>\n    <div *ngIf='inputError' class=\"errorMessage\">\n        <span>{{ errorMessage }}</span>\n    </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef }      from '@angular/core';\n\n// Models\nimport { Assignation }                                          from '../../models/assignation';\nimport { User }                                                 from '../../models/user';\n\n// Custom services\nimport { UserService }                                          from '../../services/user.service';\nimport { AssignationService }                                   from '../../services/assignation.service';\n\n@Component({\n  selector: 'assignations',\n  templateUrl: './assignations.component.html',\n  styleUrls: ['./assignations.component.css'],\n  providers: [UserService, AssignationService]\n})\nexport class AssignationsComponent implements OnInit {\n\n    public title: String;\n    public newAssignation: Boolean;\n    public newAssignationDescription: String;\n    public assignation: Assignation;\n    public assignations: Assignation[];\n    public inputError: Boolean;\n    public errorMessage: String;\n    public userId: String;\n\n    @Input() userName: String;\n    @ViewChild('newAssignation', {static: false}) newAssignationComponent: ElementRef\n\n    constructor(\n        private _userService: UserService,\n        private _assignationService: AssignationService\n    ){\n        this.title = 'Asignaciones';\n        this.inputError = false;\n     }\n\n    ngOnInit() {\n        this.getUserId(this.userName);\n    }\n\n    openNewAssignation(){\n        this.newAssignation = true;\n        setTimeout(() => {\n            this.newAssignationDescription = '';\n            this.newAssignationComponent.nativeElement.focus();\n        }, 100);\n    }\n\n    closeNewAssignation(){\n        this.newAssignation = false;\n    }\n\n    clearErrors(){\n        this.inputError = false;\n        this.errorMessage = '';\n    }\n\n    getAssignations(){\n        this._assignationService.getAssignations(this.userId).subscribe(\n            response => {\n                if(response.assignations){\n                    this.assignations = response.assignations;\n                }\n            }\n        )\n    }\n\n    getUserId(userName: String){\n        this._userService.getUserByName(userName).subscribe(\n            response => {\n                if(response.user){\n                    this.userId = response.user[0]._id;\n                    this.getAssignations();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        )\n    }\n\n    /******************* MÉTODOS DE ESCRITURA EN LA BBDD *************/\n    createAssignation(description: String){\n        this.assignation = new Assignation('', this.userId, description);\n        this._assignationService.createAssignation(this.assignation).subscribe(\n            response => {\n                if(response.assignation){\n                    this.newAssignation = false;\n                    this.clearErrors();\n                    this.getAssignations();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        )\n    }\n\n    deleteAssignation(assignationId: String){\n        if(confirm('Estás seguro de que quieres borrar definitivamente esta asignación?')){\n            this._assignationService.deleteAssignation(assignationId).subscribe(\n                response => {\n                    if(response.assignation){\n                        this.clearErrors();\n                        this.getAssignations();\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                }\n            );\n        }\n    }\n\n    updateAssignation(assignationId: String, name: String){\n        if(name == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce el nombre de la persona asignada';\n            return;\n        }\n        const assignation = new Assignation(assignationId, this.userId, name);\n        this._assignationService.updateAssignation(assignationId, assignation).subscribe(\n            response => {\n                if(response.category){\n                    this.clearErrors();\n                    this.getAssignations();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        )\n    }\n\n}\n","<header class='header'>\n    <h1>{{ title }}</h1>\n</header>\n<div id=\"by-assignation\">\n    <ul>\n        <li *ngFor='let assignation of assignations'>\n            <a class='assignated-tasks'\n               (click)='loadTasks(assignation._id)'>\n               {{ assignation.name }}\n            </a>\n            <div *ngIf='currentAssignationId == assignation._id' class='tasks'>\n                <article *ngFor='let task of tasks | taskOrder' class='task'>\n                    <h4>Categoría: </h4>\n                    <span>{{ mapCategory(task.categoryId) }}</span>\n                    <div class=\"clearfix\"></div>\n                    <h4>Fecha: </h4>\n                    <span>{{ task.date }}</span>\n                    <p spellcheck='false'>\n                        {{ task.description }}\n                    </p>\n                    <div class='icons-bar'>\n                        <button (click)='completeTask(task._id, task.description, task.date, task.categoryId, task.assignationId)' title='Completar tarea'><i class=\"fas fa-check\"></i></button>\n                    </div>\n                </article>\n            </div>\n        </li>\n    </ul>\n</div>\n","import { Component, OnInit, Input }         from '@angular/core';\n\n// Models\nimport { User }                             from '../../models/user';\nimport { Assignation }                      from '../../models/assignation';\nimport { Task }                             from '../../models/task';\nimport { Category }                         from '../../models/category';\n\n// Custom services\nimport { AssignationService }               from '../../services/assignation.service';\nimport { TaskService }                      from '../../services/task.service';\nimport { UserService }                      from '../../services/user.service';\nimport { CategoryService }                  from '../../services/category.service';\n\n@Component({\n    selector: 'assigned-tasks',\n    templateUrl: './assigned-tasks.component.html',\n    styleUrls: ['./assigned-tasks.component.css'],\n    providers: [AssignationService, TaskService, UserService, CategoryService]\n})\nexport class AssignedTasksComponent implements OnInit {\n\n    @Input() userName: String;\n\n    public title: String;\n    public assignations: Assignation[];\n    public tasks: Task[];\n    public task: Task;\n    public categories: Category[];\n    public userId: String;\n    public currentAssignationId: String;\n\n    constructor(\n        private _assignationService: AssignationService,\n        private _taskService: TaskService,\n        private _userService: UserService,\n        private _categoryService: CategoryService\n    ){\n        this.title = 'Tareas asignadas';\n        this.tasks = [];\n        this.categories = [];\n        this.currentAssignationId = '';\n     }\n\n    ngOnInit() {\n        this.getUserId(this.userName);\n    }\n\n    getAssignations(): void{\n        this._assignationService.getAssignations(this.userId).subscribe(\n            response => {\n                if(response.assignations){\n                    this.assignations = response.assignations;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getUserId(userName: String): void{\n        this._userService.getUserByName(userName).subscribe(\n            response => {\n                if(response.user){\n                    this.userId = response.user[0]._id;\n                    this.getAssignations();\n                    this.getCategories();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getCategories(): void{\n        this._categoryService.getCategories(this.userId).subscribe(\n            response => {\n                if(response.categories){\n                    this.categories = response.categories;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    mapCategory(categoryId: String): String{\n        let categoryName = '';\n        this.categories.forEach(category => {\n            if(category._id == categoryId) categoryName = <string>category.name;\n        });\n        return categoryName;\n    }\n\n    loadTasks(assignationId: String){\n        if(this.currentAssignationId == '') this.currentAssignationId = assignationId;\n        else                                this.currentAssignationId = '';\n\n        this._taskService.getAllTasksByAssignation(assignationId, this.userId).subscribe(\n            response => {\n                if(response.tasks){\n                    this.tasks = response.tasks;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    completeTask(taskId: String, description: String, date: String, categoryId: String, assignationId: String): void{\n        if(confirm('Estás seguro de que quieres marcar como completada esta tarea?')){\n            this.task = new Task(taskId,\n                                    this.userId,\n                                    description,\n                                    date,\n                                    'C',\n                                    false,\n                                    categoryId,\n                                    assignationId);\n            this._taskService.updateTask(taskId, this.task).subscribe(\n                response => {\n                    if(response.task){\n                        this.loadTasks(assignationId);\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                }\n            );\n        }\n    }\n\n}\n","<header class='header'>\n    <h1>{{ title }}</h1>\n</header>\n<div id=\"by-category\">\n    <ul>\n        <li *ngFor='let category of categories'>\n            <a class='category'\n               (click)='loadTasks(category._id)'\n               >{{category.name}}</a>\n            <div *ngIf='currentCategoryId == category._id' class='tasks'>\n                <article *ngFor='let task of tasks | taskOrder' class='task'>\n                    <span class='date'\n                          contenteditable='true'\n                          spellcheck='false'\n                          [textContent]='task.date'\n                          (input)='task.date=$event.target.textContent'\n                          required></span>\n                    <div class=\"clearfix\"></div>\n                    <p contenteditable='true'\n                       spellcheck='false'\n                       [textContent]='task.description'\n                       (input)=\"task.description=$event.target.textContent\"\n                       (keypress)='clearErrors()'\n                       required>\n                    </p>\n                    <div class='icons-bar'>\n                        <button (click)='openAssignment(task._id, task.description, task.date, task.categoryId)'  title='Assignar a alguien'><i class=\"fas fa-hand-point-right\"></i></button>\n                        <button (click)='deleteTask(task._id, task.categoryId)' title='Eliminar tarea'><i class=\"fas fa-trash-alt\" ></i></button>\n                        <button (click)='completeTask(task._id, task.description, task.date, task.categoryId)' title='Completar tarea'><i class=\"fas fa-check\"></i></button>\n                        <button (click)='updateTask(task._id, task.description, task.date, task.categoryId)' title='Guardar tarea'><i class=\"fas fa-save\"></i></button>\n                    </div>\n                </article>\n            </div>\n        </li>\n    </ul>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n// Models\nimport { Category }                 from '../../models/category';\nimport { Task }                     from '../../models/task';\nimport { User }                     from '../../models/user';\n\n// Custom services\nimport { CategoryService }          from '../../services/category.service';\nimport { TaskService }              from '../../services/task.service';\nimport { UserService }              from '../../services/user.service';\n\n@Component({\n    selector: 'by-category',\n    templateUrl: './by-category.component.html',\n    styleUrls: ['./by-category.component.css'],\n    providers: [CategoryService, TaskService, UserService]\n})\nexport class ByCategoryComponent implements OnInit {\n\n    @Input() userName: String;\n\n    public title: String;\n    public categories: Category[];\n    public tasks: Task[];\n    public task: Task;\n    public userId: String;\n    public currentCategoryId: String;\n    public errorMessage: String;\n    public inputError: boolean;\n    public taskAssigned: boolean;\n    public _assignationId: String;\n\n    constructor(\n        private _categoryService: CategoryService,\n        private _taskService: TaskService,\n        private _userService: UserService\n    ){\n        this.title = 'Tareas por Categorías'\n        this.tasks = [];\n        this.currentCategoryId = '';\n    }\n\n    ngOnInit() {\n        this.getUserId(this.userName);\n    }\n\n    getCategories(): void{\n        this._categoryService.getCategories(this.userId).subscribe(\n            response => {\n                if(response.categories){\n                    this.categories = response.categories;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    loadTasks(categoryId: String): void{\n        if(this.currentCategoryId == '') this.currentCategoryId = categoryId;\n        else                             this.currentCategoryId = '';\n\n        this._taskService.getAllTasksByCategory(categoryId, this.userId).subscribe(\n            response => {\n                if(response.tasks){\n                    this.tasks = response.tasks;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getUserId(userName: String): void{\n        this._userService.getUserByName(userName).subscribe(\n            response => {\n                if(response.user){\n                    this.userId = response.user[0]._id;\n                    this.getCategories();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    openAssignment(taskId, description, date, categoryId): void{\n        if(description == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la descripción de la tarea';\n            return;\n        }\n        if(date == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la fecha de la tarea';\n            return;\n        }\n        if(categoryId == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la categoría de la tarea';\n            return;\n        }\n        this.taskAssigned = true;\n        this.task = new Task(taskId,\n                             this.userId,\n                             description,\n                             date,\n                             'P',\n                             true,\n                             categoryId,\n                             'none');\n    }\n\n    closeAssignment(): void{\n        this.taskAssigned = false;\n    }\n\n    clearErrors(){\n        this.inputError = false;\n        this.errorMessage = '';\n    }\n\n    /******************* MÉTODOS DE ESCRITURA EN LA BBDD *************/\n    updateTask(taskId: String, description: String, date: String, categoryId: String): void{\n        // Validaciones\n        if(description == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la descripción de la tarea';\n            return;\n        }\n        if(date == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la fecha de la tarea';\n            return;\n        }\n        if(categoryId == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la categoría de la tarea';\n            return;\n        }\n        this.task = new Task(taskId,\n                             this.userId,\n                             description,\n                             date,\n                             'P',\n                             true,\n                             categoryId,\n                             'none');\n        this._taskService.updateTask(taskId, this.task).subscribe(\n            response => {\n                if(response.task){\n                    this.loadTasks(categoryId);\n                    this.clearErrors();\n                }\n            },\n            error => {\n                this.inputError = true;\n                this.errorMessage = 'Error al modificar la tarea';\n                console.log(<any>error);\n            }\n        );\n    }\n\n    completeTask(taskId: String, description: String, date: String, categoryId: String): void{\n        if(confirm('Estás seguro de que quieres marcar como completada esta tarea?')){\n            if(description == ''){\n                this.inputError = true;\n                this.errorMessage = 'Introduce la descripción de la tarea';\n                return;\n            }\n            if(date == ''){\n                this.inputError = true;\n                this.errorMessage = 'Introduce la fecha de la tarea';\n                return;\n            }\n            if(categoryId == ''){\n                this.inputError = true;\n                this.errorMessage = 'Introduce la categoría de la tarea';\n                return;\n            }\n            this.task = new Task(taskId,\n                                this.userId,\n                                description,\n                                date,\n                                'C',\n                                true,\n                                categoryId,\n                                'none');\n            this._taskService.updateTask(taskId, this.task).subscribe(\n                response => {\n                    if(response.task){\n                        this.loadTasks(categoryId);\n                        this.clearErrors();\n                    }\n                },\n                error => {\n                    this.inputError = true;\n                    this.errorMessage = 'Error al completar la tarea';\n                    console.log(<any>error);\n                }\n            );\n        }\n    }\n\n    assignTask(): void{\n        if(this.task && this._assignationId){\n            this.task.assignationId = this._assignationId;\n            console.log(this.task);\n            this._taskService.updateTask(this.task._id, this.task).subscribe(\n                response => {\n                    if(response.task){\n                        this.loadTasks(this.task.categoryId);\n                        this.taskAssigned = false;\n                        this.clearErrors();\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                    this.inputError = true;\n                    this.errorMessage = 'Error al asignar la tarea';\n                }\n            );\n        }\n    }\n\n    deleteTask(taskId: String, taskCategory: String): void{\n        if(confirm('Estás seguro de que quieres borrar definitivamente esta tarea?')){\n            this._taskService.deleteTask(taskId).subscribe(\n                response => {\n                    if(response.task){\n                        this.loadTasks(taskCategory);\n                        this.clearErrors();\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                    this.inputError = true;\n                    this.errorMessage = 'Error al eliminar la tarea';\n                }\n            );\n        }\n    }\n}\n","<header class='header'>\n    <h1>{{ title }}</h1>\n    <div (click)='openNewCategory()' class='add-category'>\n        <i class='icon-add'\n           class=\"fa fa-plus-circle fa-2x\"></i>\n    </div>\n</header>\n<div class=\"categories\">\n    <article *ngIf='newCategory' class='category'>\n        <form #newCategoryForm='ngForm'>\n            <label for=\"newCategory\">Nombre</label>\n            <input type='text'\n                   class='newCategory'\n                   name='newCategory'\n                   #newCategory\n                   [(ngModel)]='newCategoryDescription'\n                   required>\n            <div class='icons-bar'>\n                <button (click)='closeNewCategory()'><i class=\"fas fa-times-circle\"></i></button>\n                <button [disabled]='!newCategoryForm.valid' (click)='createCategory(newCategoryDescription)'><i class=\"fas fa-save\"></i></button>\n            </div>\n        </form>\n    </article>\n    <article *ngFor='let category of categories' class='category'>\n        <div class=\"clearfix\"></div>\n        <p contenteditable='true'\n           spellcheck='false'\n           [textContent]='category.name'\n           (input)=\"category.name=$event.target.textContent\"\n           (keypress)='clearErrors()'\n           required>\n        </p>\n        <div class='icons-bar'>\n            <button (click)='deleteCategory(category._id)' title='Eliminar categoría'><i class=\"fas fa-trash-alt\"></i></button>\n            <button (click)='updateCategory(category._id, category.name)' title='Guardar categoría'><i class=\"fas fa-save\"></i></button>\n        </div>\n    </article>\n    <div *ngIf='inputError' class=\"errorMessage\">\n        <span>{{ errorMessage }}</span>\n    </div>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef }      from '@angular/core';\n\n// Models\nimport { Category }                                             from '../../models/category';\nimport { User }                                                 from '../../models/user';\n\n// Custom services\nimport { UserService }                                          from '../../services/user.service';\nimport { CategoryService }                                      from '../../services/category.service';\n\n@Component({\n  selector: 'categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css'],\n  providers: [UserService, CategoryService]\n})\nexport class CategoriesComponent implements OnInit {\n\n    public title: String;\n    public newCategory: Boolean;\n    public newCategoryDescription: String;\n    public category: Category;\n    public categories: Category[];\n    public inputError: Boolean;\n    public errorMessage: String;\n    public userId: String;\n\n    @Input() userName: String;\n    @ViewChild('newCategory', {static: false}) newCategoryComponent: ElementRef\n\n    constructor(\n        private _userService: UserService,\n        private _categoryService: CategoryService\n    ){\n        this.title = 'Categorías';\n        this.inputError = false;\n     }\n\n    ngOnInit() {\n        this.getUserId(this.userName);\n    }\n\n    openNewCategory(){\n        this.newCategory = true;\n        setTimeout(() => {\n            this.newCategoryDescription = '';\n            this.newCategoryComponent.nativeElement.focus();\n        }, 100);\n    }\n\n    closeNewCategory(){\n        this.newCategory = false;\n    }\n\n    clearErrors(){\n        this.inputError = false;\n        this.errorMessage = '';\n    }\n\n    getCategories(){\n        this._categoryService.getCategories(this.userId).subscribe(\n            response => {\n                if(response.categories){\n                    this.categories = response.categories;\n                }\n            }\n        )\n    }\n\n    getUserId(userName: String){\n        this._userService.getUserByName(userName).subscribe(\n            response => {\n                if(response.user){\n                    this.userId = response.user[0]._id;\n                    this.getCategories();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        )\n    }\n\n    /******************* MÉTODOS DE ESCRITURA EN LA BBDD *************/\n    createCategory(description: String){\n        this.category = new Category('', this.userId, description);\n        this._categoryService.createCategory(this.category).subscribe(\n            response => {\n                if(response.category){\n                    this.newCategory = false;\n                    this.clearErrors();\n                    this.getCategories();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        )\n    }\n\n    deleteCategory(categoryId: String){\n        if(confirm('Estás seguro de que quieres borrar definitivamente esta categoría?')){\n            this._categoryService.deleteCategory(categoryId).subscribe(\n                response => {\n                    if(response.category){\n                        this.clearErrors();\n                        this.getCategories();\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                }\n            );\n        }\n    }\n\n    updateCategory(categoryId: String, name: String){\n        if(name == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce el nombre de la categoría';\n            return;\n        }\n        const category = new Category(categoryId, this.userId, name);\n        this._categoryService.updateCategory(categoryId, category).subscribe(\n            response => {\n                if(response.category){\n                    this.clearErrors();\n                    this.getCategories();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        )\n    }\n\n}\n","<header class='header'>\n    <h1>{{ title }}</h1>\n</header>\n<div id=\"history\">\n    <div class='tasks'>\n        <article *ngFor='let task of tasks' class='task'>\n            <h4>Categoría: </h4>\n            <span>{{ mapCategory(task.categoryId) }}</span>\n            <div class=\"clearfix\"></div>\n            <h4>Asignado a: </h4>\n            <span>{{ mapAssignation(task.assignationId) }}</span>\n            <div class=\"clearfix\"></div>\n            <h4>Fecha: </h4>\n            <span>{{ task.date }}</span>\n            <p spellcheck='false'>\n                {{ task.description }}\n            </p>\n            <div class='icons-bar'>\n                <button (click)='deleteTask(task._id)'><i class=\"fas fa-trash-alt\" title='Eliminar tarea'></i></button>\n            </div>\n        </article>\n    </div>\n</div>\n\n","import { Component, OnInit, Input }             from '@angular/core';\n\n// Models\nimport { User }                             from '../../models/user';\nimport { Assignation }                      from '../../models/assignation';\nimport { Task }                             from '../../models/task';\nimport { Category }                         from '../../models/category';\n\n// Custom services\nimport { AssignationService }               from '../../services/assignation.service';\nimport { TaskService }                      from '../../services/task.service';\nimport { UserService }                      from '../../services/user.service';\nimport { CategoryService }                  from '../../services/category.service';\n\n@Component({\n    selector: 'history',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n    @Input() userName: String;\n\n    public title: String;\n    public assignations: Assignation[];\n    public tasks: Task[];\n    public task: Task;\n    public categories: Category[];\n    public userId: String;\n    public currentAssignationId: String;\n\n    constructor(\n        private _assignationService: AssignationService,\n        private _taskService: TaskService,\n        private _userService: UserService,\n        private _categoryService: CategoryService\n    ){\n        this.title = 'Tareas Completadas';\n        this.tasks = [];\n        this.categories = [];\n        this.assignations = [];\n     }\n\n    ngOnInit(){\n        this.getUserId(this.userName);\n    }\n\n    getTasks(): void{\n        this._taskService.getTasks(this.userId).subscribe(\n            response => {\n                if(response.tasks){\n                    this.tasks = response.tasks;\n                    console.log(this.tasks);\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getCategories(): void{\n        this._categoryService.getCategories(this.userId).subscribe(\n            response => {\n                if(response.categories){\n                    this.categories = response.categories;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getAssignations(): void{\n        this._assignationService.getAssignations(this.userId).subscribe(\n            response => {\n                if(response.assignations){\n                    this.assignations = response.assignations;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getUserId(userName: String): void{\n        this._userService.getUserByName(userName).subscribe(\n            response => {\n                if(response.user){\n                    this.userId = response.user[0]._id;\n                    this.getAssignations();\n                    this.getCategories();\n                    this.getTasks();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    mapCategory(categoryId: String): String{\n        let categoryName = '';\n        this.categories.forEach(category => {\n            if(category._id == categoryId) categoryName = <string>category.name;\n        });\n        return categoryName;\n    }\n\n    mapAssignation(assignationId: String): String{\n        let assignationName = '';\n        this.assignations.forEach(assignation => {\n            if(assignation._id == assignationId) assignationName = <string>assignation.name;\n        });\n        return assignationName;\n    }\n\n    deleteTask(taskId: String){\n        if(confirm('Estás seguro de que quieres borrar definitivamente esta tarea?')){\n            this._taskService.deleteTask(taskId).subscribe(\n                response => {\n                    if(response.task){\n                        this.getTasks();\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                }\n            );\n        }\n    }\n\n}\n","<header class='header'>\n    <h1>{{ title }}</h1>\n    <div (click)='openNewTask()' class='add-task'>\n        <i class='icon-add'\n           class=\"fa fa-plus-circle fa-2x\"></i>\n    </div>\n</header>\n<div class=\"tasks\">\n    <article *ngIf='newTask' class='task'>\n        <form #newTaskForm='ngForm'>\n            <div class='category-block'>\n                <label for=\"category\">Categoría</label>\n                <select class='category'\n                        name='category'\n                        #categoryId = 'ngModel'\n                        [(ngModel)]='taskCategory'\n                        required>\n                    <option></option>\n                    <option *ngFor='let category of categories'\n                            [value]='category._id'>{{ category.name }}</option>\n                </select>\n            </div>\n            <div class='date-block'>\n                <label for=\"date\">Fecha</label>\n                <input type='text'\n                       name='newTaskDate'\n                       placeholder=\"dd-mm-aaaa\"\n                       [(ngModel)]='newTaskDate'\n                       required />\n            </div>\n            <div class=\"clearfix\"></div>\n            <textarea class='newTask'\n                      name='newTask'\n                      rows='5'\n                      #newTask\n                      [(ngModel)]='newTaskDescription'\n                      required>\n            </textarea>\n            <div class='icons-bar'>\n                <button (click)='closeNewTask()'><i class=\"fas fa-times-circle\"></i></button>\n                <button [disabled]='!newTaskForm.valid' (click)='createTask(newTaskDescription, newTaskDate, taskCategory)'><i class=\"fas fa-save\"></i></button>\n            </div>\n        </form>\n    </article>\n    <article *ngFor='let task of tasks | taskOrder' class='task'>\n        <span class='date'\n              contenteditable='true'\n              spellcheck='false'\n              [textContent]='task.date'\n              (input)='task.date=$event.target.textContent'\n              required></span>\n        <div class='category-block'>\n            <label for=\"category\">Categoría</label>\n            <select class='category'\n                    name='category'\n                    #categoryId = 'ngModel'\n                    [(ngModel)]='task.categoryId'\n                    (change)='clearErrors()'\n                    required>\n                <option></option>\n                <option *ngFor='let category of categories'\n                        [value]='category._id'>{{ category.name }}</option>\n            </select>\n        </div>\n        <div class=\"clearfix\"></div>\n        <p contenteditable='true'\n           spellcheck='false'\n           [textContent]='task.description'\n           (input)=\"task.description=$event.target.textContent\"\n           (keypress)='clearErrors()'\n           required>\n        </p>\n        <div class='icons-bar'>\n            <button (click)='donwngradeTask(task._id, task.description, task.date, task.categoryId)' title='Pasar a secundaria'><i class=\"fas fa-arrow-alt-circle-down\"></i></button>\n            <button (click)='openAssignment(task._id, task.description, task.date, task.categoryId)' title='Assignar a alguien'><i class=\"fas fa-hand-point-right\"></i></button>\n            <button (click)='deleteTask(task._id)'><i class=\"fas fa-trash-alt\" title='Eliminar tarea'></i></button>\n            <button (click)='completeTask(task._id, task.description, task.date, task.categoryId)' title='Completar tarea'><i class=\"fas fa-check\"></i></button>\n            <button (click)='updateTask(task._id, task.description, task.date, task.categoryId)' title='Guardar tarea'><i class=\"fas fa-save\"></i></button>\n        </div>\n    </article>\n    <div *ngIf='inputError' class=\"errorMessage\">\n        <span>{{ errorMessage }}</span>\n    </div>\n    <div *ngIf='taskAssigned' class='assignation'>\n        <label for=\"assigned\">Asignar a </label>\n        <select name='assigned'\n                #assignationId = 'ngModel'\n                [(ngModel)]='_assignationId'\n                required>\n            <option></option>\n            <option *ngFor='let assignation of assignations'\n                    [value]='assignation._id'>{{ assignation.name }}</option>\n        </select>\n        <span class='assignButton' (click)='assignTask()'><i class=\"fas fa-check\"></i></span>\n        <span class='closeAssignmentButton' (click)='closeAssignment()'><i class=\"fas fa-times-circle\"></i></span>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild,\n         ElementRef, Input }                            from '@angular/core';\n\n// Models\nimport { Task }                                         from '../../models/task';\nimport { Category }                                     from '../../models/category';\nimport { Assignation }                                  from '../../models/assignation';\n\n// Custom services\nimport { UserService }                                  from '../../services/user.service';\nimport { TaskService }                                  from '../../services/task.service';\nimport { CategoryService }                              from '../../services/category.service';\nimport { AssignationService }                           from '../../services/assignation.service';\n\n@Component({\n    selector: 'importants',\n    templateUrl: './importants.component.html',\n    styleUrls: ['./importants.component.css'],\n    providers: [TaskService, CategoryService, AssignationService, UserService]\n})\nexport class ImportantsComponent implements OnInit {\n\n    public newTask: boolean;\n    public tasks: Task[];\n    public task: Task;\n    public categories: Category[];\n    public assignations: Assignation[];\n    public taskCategory: String;\n    public title: String;\n    public newTaskDate: String;\n    public newTaskDescription: String;\n    public taskAssigned: boolean;\n    public _assignationId: String;\n    public userId: String;\n    public errorMessage: String;\n    public inputError: boolean;\n\n    @Input() userName: String;\n    @ViewChild('newTask', {static: false}) newTaskComponent: ElementRef;\n\n    constructor(\n        private _taskService: TaskService,\n        private _categoryService: CategoryService,\n        private _assignationService: AssignationService,\n        private _userService: UserService\n    ){\n        this.title = 'Tareas Importantes';\n        this.newTask = false;\n        this.categories = [];\n        this.tasks = [];\n        this.taskAssigned = false;\n        this.inputError = false;\n    }\n\n    ngOnInit() {\n        this.getUserId(this.userName);\n    }\n\n    openNewTask(): void{\n        this.newTask = true;\n        this.taskCategory = '';\n        this.newTaskDate = '';\n        this.newTaskDescription = '';\n        /* Utilizamos el setTimeout para dar tiempo a que se cargue el componente\n           html. Si lo hacemos inmediatamente, al estar sujeto al *ngIf, dará\n           nulo\n        */\n        setTimeout(() => {\n            this.newTaskComponent.nativeElement.value = '';\n            this.newTaskComponent.nativeElement.focus();\n        }, 100);\n    }\n\n    closeNewTask(): void{\n        this.newTask = false;\n    }\n\n    getTasks(): void{\n        this._taskService.getImportantTasks(this.userId).subscribe(\n            response => {\n                if(response.tasks){\n                    this.tasks = response.tasks;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getCategories(): void{\n        this._categoryService.getCategories(this.userId).subscribe(\n            response => {\n                if(response.categories){\n                    this.categories = response.categories;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getAssignations(): void{\n        this._assignationService.getAssignations(this.userId).subscribe(\n            response => {\n                if(response.assignations){\n                    this.assignations = response.assignations;\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    getUserId(userName: String): void{\n        this._userService.getUserByName(userName).subscribe(\n            response => {\n                if(response.user){\n                    this.userId = response.user[0]._id;\n                    this.getCategories();\n                    this.getAssignations();\n                    this.getTasks();\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        );\n    }\n\n    openAssignment(taskId: String, description: String, date: String, categoryId: String): void{\n        if(description == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la descripción de la tarea';\n            return;\n        }\n        if(date == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la fecha de la tarea';\n            return;\n        }\n        if(categoryId == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la categoría de la tarea';\n            return;\n        }\n        this.taskAssigned = true;\n        this.task = new Task(taskId,\n                             this.userId,\n                             description,\n                             date,\n                             'P',\n                             true,\n                             categoryId,\n                             'none');\n    }\n\n    closeAssignment(): void{\n        this.taskAssigned = false;\n    }\n\n    clearErrors(){\n        this.inputError = false;\n        this.errorMessage = '';\n    }\n\n    /******************* MÉTODOS DE ESCRITURA EN LA BBDD *************/\n    createTask(description: String, date: String, categoryId: String): void{\n        if(description == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la descripción de la tarea';\n            return;\n        }\n        if(date == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la fecha de la tarea';\n            return;\n        }\n        if(categoryId == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la categoría de la tarea';\n            return;\n        }\n        this.task = new Task('',\n                             this.userId,\n                             description,\n                             date,\n                             'P',\n                             true,\n                             categoryId,\n                             'none');\n        this._taskService.createTask(this.task).subscribe(\n            response => {\n                if(response.task){\n                    this.newTask = false;\n                    this.getTasks();\n                    this.clearErrors();\n                }\n            },\n            error => {\n                console.log(<any>error);\n                this.inputError = true;\n                this.errorMessage = 'Error al crear la tarea';\n            }\n        );\n    }\n\n    donwngradeTask(taskId: String, description: String, date: String, categoryId: String): void{\n        if(description == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la descripción de la tarea';\n            return;\n        }\n        if(date == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la fecha de la tarea';\n            return;\n        }\n        if(categoryId == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la categoría de la tarea';\n            return;\n        }\n        this.task = new Task(taskId,\n                             this.userId,\n                             description,\n                             date,\n                             'P',\n                             false,\n                             categoryId,\n                             'none');\n        this._taskService.updateTask(taskId, this.task).subscribe(\n            response => {\n                if(response.task){\n                    this.getTasks();\n                    this.clearErrors();\n                }\n            },\n            error => {\n                this.inputError = true;\n                this.errorMessage = 'Error al modificar la tarea';\n                console.log(<any>error);\n            }\n        );\n    }\n\n    updateTask(taskId: String, description: String, date: String, categoryId: String): void{\n        // Validaciones\n        if(description == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la descripción de la tarea';\n            return;\n        }\n        if(date == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la fecha de la tarea';\n            return;\n        }\n        if(categoryId == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la categoría de la tarea';\n            return;\n        }\n        this.task = new Task(taskId,\n                             this.userId,\n                             description,\n                             date,\n                             'P',\n                             true,\n                             categoryId,\n                             'none');\n        this._taskService.updateTask(taskId, this.task).subscribe(\n            response => {\n                if(response.task){\n                    this.getTasks();\n                    this.clearErrors();\n                }\n            },\n            error => {\n                this.inputError = true;\n                this.errorMessage = 'Error al modificar la tarea';\n                console.log(<any>error);\n            }\n        );\n    }\n\n    completeTask(taskId: String, description: String, date: String, categoryId: String): void{\n        if(confirm('Estás seguro de que quieres marcar como completada esta tarea?')){\n            if(description == ''){\n                this.inputError = true;\n                this.errorMessage = 'Introduce la descripción de la tarea';\n                return;\n            }\n            if(date == ''){\n                this.inputError = true;\n                this.errorMessage = 'Introduce la fecha de la tarea';\n                return;\n            }\n            if(categoryId == ''){\n                this.inputError = true;\n                this.errorMessage = 'Introduce la categoría de la tarea';\n                return;\n            }\n            this.task = new Task(taskId,\n                                this.userId,\n                                description,\n                                date,\n                                'C',\n                                true,\n                                categoryId,\n                                'none');\n            this._taskService.updateTask(taskId, this.task).subscribe(\n                response => {\n                    if(response.task){\n                        this.getTasks();\n                        this.clearErrors();\n                    }\n                },\n                error => {\n                    this.inputError = true;\n                    this.errorMessage = 'Error al completar la tarea';\n                    console.log(<any>error);\n                }\n            );\n        }\n    }\n\n    assignTask(): void{\n        if(this.task && this._assignationId){\n            this.task.assignationId = this._assignationId;\n            this._taskService.updateTask(this.task._id, this.task).subscribe(\n                response => {\n                    if(response.task){\n                        this.getTasks();\n                        this.taskAssigned = false;\n                        this.clearErrors();\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                    this.inputError = true;\n                    this.errorMessage = 'Error al asignar la tarea';\n                }\n            );\n        }\n    }\n\n    deleteTask(taskId: String): void{\n        if(confirm('Estás seguro de que quieres borrar definitivamente esta tarea?')){\n            this._taskService.deleteTask(taskId).subscribe(\n                response => {\n                    if(response.task){\n                        this.getTasks();\n                        this.clearErrors();\n                    }\n                },\n                error => {\n                    console.log(<any>error);\n                    this.inputError = true;\n                    this.errorMessage = 'Error al eliminar la tarea';\n                }\n            );\n        }\n    }\n}\n","<div class=\"container\">\n    <div id=\"login\">\n        <h1>{{ title }}</h1>\n        <form #loginForm='ngForm' (submit)='onSubmit($event)'>\n            <div id='fields-box'>\n                <input type=\"text\"\n                       placeholder=\"Introduce el nombre de usuario\"\n                       #name='ngModel'\n                       name='name'\n                       [(ngModel)]='user.name'\n                       [ngStyle]=\"{\n                            'border': nameEmpty ? '1px solid #bb2222' : '1px solid #ccc'\n                            }\"\n                       (blur)='onBlurName()'\n                       (focus)='onFocusName()'\n                       required><button tabindex=-1 class='icon'><i class=\"fas fa-user\"></i></button>\n                <input type=\"password\"\n                       placeholder=\"Introduce la contraseña\"\n                       #password='ngModel'\n                       name='password'\n                       [(ngModel)]='user.password'\n                       [ngStyle]=\"{\n                            'border': passwordEmpty ? '1px solid #bb2222' : '1px solid #ccc'\n                        }\"\n                       (blur)='onBlurPassword()'\n                       (focus)='onFocusPassword()'\n                       required><button tabindex=-1 class='icon'><i class=\"fas fa-unlock-alt\"></i></button>\n                <a [routerLink]=\"['/register']\">¡Regístrate si no tienes cuenta!</a>\n            </div>\n            <button type='submit'\n                    id='submit'\n                    [disabled]='!loginForm.form.valid'><i class=\"fas fa-check\"></i> Aceptar</button>\n        </form>\n        <div class=\"clearfix\"></div>\n    </div>\n    <div *ngIf='nameEmpty && !name.valid' class=\"validation\">\n        <span>El código de usuario es obligatorio</span>\n    </div>\n    <div *ngIf='passwordEmpty && !password.valid' class=\"validation\">\n        <span>La contraseña es obligatoria</span>\n    </div>\n    <div *ngIf='okMessage' class=\"message-success\">\n        <span>Usuario registrado correctamente. </span><a [routerLink]=\"['/login']\">Haz clic para iniciar sesión</a>\n    </div>\n    <div *ngIf='errorMessage' class=\"message-error\">\n        <span>{{ message }}</span>\n    </div>\n</div>\n","import { Component, OnInit }            from '@angular/core';\nimport { Router }                       from '@angular/router';\n\n// Servicios custom\nimport { UserService }              from '../../services/user.service';\nimport { User }                     from '../../models/user';\n\n@Component({\n    selector: 'login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css'],\n    providers: [UserService]\n})\nexport class LoginComponent implements OnInit {\n\n    public title: String;\n    public user: User;\n    public okMessage: boolean;\n    public errorMessage: boolean;\n    public nameEmpty: boolean;\n    public passwordEmpty: boolean;\n    public message:String;\n\n    constructor(\n        private _userService: UserService,\n        private _router: Router\n    ){\n        this.title = 'Inicio de Sesión'\n        this.user = new User('','');\n        this.okMessage = false;\n        this.errorMessage = false;\n        this.nameEmpty = false;\n        this.passwordEmpty = false;\n        this.message = '';\n     }\n\n    ngOnInit() {\n    }\n\n    onSubmit(event){\n        // Comprobamos que el ususario exista\n        this._userService.getUserByName(this.user.name).subscribe(\n            response => {\n                if(response.user.length){\n                    // Si existe, comparamos la contraseña introducida con la guardada en la base de datos\n                    this._userService.authenticate(this.user).subscribe(\n                        response => {\n                            this._userService.setUserLoggedIn(this.user.name);\n                            this._router.navigateByUrl('/main');\n                        },\n                        error => {\n                            if(error.status == 403){\n                                this.message = 'La constraseña no coincide con la del usuario registrado';\n                                this.okMessage = false;\n                                this.errorMessage = true;\n                            }\n                        }\n                    )\n                }else{\n                    this.message = 'Usuario inexistente';\n                    this.okMessage = false;\n                    this.errorMessage = true;\n                }\n            }\n        );\n    }\n\n    onBlurName(){\n        this.errorMessage = false;\n        this.okMessage = false;\n        this.nameEmpty = this.user.name == '' ? true : false;\n    }\n\n    onFocusName(){\n        this.nameEmpty = false;\n    }\n\n    onBlurPassword(){\n        this.passwordEmpty = this.user.password == '' ? true : false;\n        this.errorMessage = false;\n        this.okMessage = false;\n    }\n\n    onFocusPassword(){\n        this.passwordEmpty = false;\n    }\n\n}\n","<div class=\"container\">\n    <aside id=\"sidebar\">\n        <menu (getUsername)='getUsername($event)'\n              (getMenuOption)='getMenuOption($event)'></menu>\n    </aside>\n    <div id=\"content\">\n        <importants *ngIf=\"menuOption == 'I'\" [userName]='userName'></importants>\n        <secondary *ngIf=\"menuOption == 'S'\" [userName]='userName'></secondary>\n        <by-category *ngIf=\"menuOption == 'BC'\" [userName]='userName'></by-category>\n        <assigned-tasks *ngIf=\"menuOption == 'AT'\" [userName]='userName'></assigned-tasks>\n        <categories *ngIf=\"menuOption == 'C'\" [userName]='userName'></categories>\n        <assignations *ngIf=\"menuOption == 'A'\" [userName]='userName'></assignations>\n        <history *ngIf=\"menuOption == 'H'\" [userName]='userName'></history>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef }         from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n    public newTask: boolean;\n    public userName: String;\n    public menuOption: string;\n\n    @ViewChild('newTask', {static: false}) newTaskComponent: ElementRef;\n\n    constructor(){\n        this.newTask = false;\n    }\n\n    ngOnInit() {\n    }\n\n    openNewTask(){\n        this.newTask = true;\n        /* Utilizamos el setTimeout para dar tiempo a que se cargue el componente\n           html. Si lo hacemos inmediatamente, al estar sujeto al *ngIf, dará\n           nulo\n        */\n        setTimeout(() => {\n            this.newTaskComponent.nativeElement.focus();\n        }, 100);\n    }\n\n    getUsername(event){\n        this.userName = event;\n    }\n\n    getMenuOption(event){\n        this.menuOption = event;\n    }\n}\n","<nav id='menu'>\n    <header *ngIf='loggedUser'>\n        <i class=\"fas fa-user\"></i> <span>{{ loggedUser }}</span>\n    </header>\n    <ul>\n        <li>\n            <a (click)='showImportants()' [class.selected]='currentOption==\"I\"'>Tareas importantes</a>\n        </li>\n        <li>\n            <a (click)='showSecondary()' [class.selected]='currentOption==\"S\"'>Tareas secundarias</a>\n        </li>\n        <li>\n            <a (click)='showByCategory()' [class.selected]='currentOption==\"BC\"'>Por categorías</a>\n        </li>\n        <li>\n            <a (click)='showAssignatedTasks()' [class.selected]='currentOption==\"AT\"'>Tareas asignadas</a>\n        </li>\n        <li>\n            <a (click)='showCategories()' [class.selected]='currentOption==\"C\"'>Categorías</a>\n        </li>\n        <li>\n            <a (click)='showAssignations()' [class.selected]='currentOption==\"A\"'>Asignaciones</a>\n        </li>\n        <li>\n            <a (click)='showHistory()' [class.selected]='currentOption==\"H\"'>Tareas completadas</a>\n        </li>\n    </ul>\n</nav>\n","import { Component, OnInit, EventEmitter, Output }      from '@angular/core';\n\n// Custom services\nimport { UserService }                                  from '../../services/user.service';\n\n@Component({\n    selector: 'menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.css'],\n    providers: [UserService]\n})\nexport class MenuComponent implements OnInit {\n\n    @Output() getUsername = new EventEmitter();\n    @Output() getMenuOption = new EventEmitter();\n\n    public loggedIn: Boolean;\n    public loggedUser: String;\n    public menuOption: String;\n    public currentOption: String;\n\n    constructor(\n        private _userService: UserService\n    ){\n        this.loggedIn = this._userService.isLoggedIn();\n    }\n\n    ngOnInit(){\n        this.loggedUser = this._userService.getUserLoggedIn();\n        this.getUsername.emit(this.loggedUser);\n        this.menuOption = 'I';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n    showImportants(){\n        this.menuOption = 'I';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n    showSecondary(){\n        this.menuOption = 'S';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n    showByCategory(){\n        this.menuOption = 'BC';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n    showCategories(){\n        this.menuOption = 'C';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n    showAssignations(){\n        this.menuOption = 'A';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n    showAssignatedTasks(){\n        this.menuOption = 'AT';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n    showHistory(){\n        this.menuOption = 'H';\n        this.currentOption = this.menuOption;\n        this.getMenuOption.emit(this.menuOption);\n    }\n\n}\n","<div class=\"container\">\n    <div id=\"login\">\n        <h1>{{ title }}</h1>\n        <form #registerForm='ngForm' (submit)='onSubmit($event)'>\n            <div id='fields-box'>\n                <input type=\"text\"\n                       placeholder=\"Introduce el nombre de usuario\"\n                       #name='ngModel'\n                       name='name'\n                       [(ngModel)]='user.name'\n                       [ngStyle]=\"{\n                            'border': nameEmpty ? '1px solid #bb2222' : '1px solid #ccc'\n                            }\"\n                       (blur)='onBlurName()'\n                       (focus)='onFocusName()'\n                       required><button tabindex=-1 class='icon'><i class=\"fas fa-user\"></i></button>\n                <input type=\"password\"\n                       placeholder=\"Introduce la contraseña\"\n                       #password='ngModel'\n                       name='password'\n                       [(ngModel)]='user.password'\n                       [ngStyle]=\"{\n                            'border': passwordEmpty ? '1px solid #bb2222' : '1px solid #ccc'\n                        }\"\n                       (blur)='onBlurPassword()'\n                       (focus)='onFocusPassword()'\n                       required><button tabindex=-1 class='icon'><i class=\"fas fa-unlock-alt\"></i></button>\n            </div>\n            <button type='submit'\n                    id='submit'\n                    [disabled]='!registerForm.form.valid'><i class=\"fas fa-check\"></i> Aceptar</button>\n        </form>\n        <div class=\"clearfix\"></div>\n    </div>\n    <div *ngIf='nameEmpty && !name.valid' class=\"validation\">\n        <span>El código de usuario es obligatorio</span>\n    </div>\n    <div *ngIf='passwordEmpty && !password.valid' class=\"validation\">\n        <span>La contraseña es obligatoria</span>\n    </div>\n    <div *ngIf='okMessage' class=\"message-success\">\n        <span>Usuario registrado correctamente. </span><a [routerLink]=\"['/login']\">Haz clic para iniciar sesión</a>\n    </div>\n    <div *ngIf='errorMessage' class=\"message-error\">\n        <span>{{ message }}</span>\n    </div>\n</div>\n","import { Component, OnInit }        from '@angular/core';\n\n// Servicios custom\nimport { UserService }              from '../../services/user.service';\nimport { User }                     from '../../models/user';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  providers: [UserService]\n})\nexport class RegisterComponent implements OnInit {\n\n    public title: String;\n    public user: User;\n    public okMessage: boolean;\n    public errorMessage: boolean;\n    public nameEmpty: boolean;\n    public passwordEmpty: boolean;\n    public message:String;\n\n    constructor(\n        private _userService: UserService\n    )\n    {\n        this.title = 'Registro de usuario';\n        this.user = new User('', '');\n        this.okMessage = false;\n        this.errorMessage = false;\n        this.nameEmpty = false;\n        this.passwordEmpty = false;\n        this.message = '';\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit(event){\n        event.preventDefault();\n        // Primero miramos si existe el usuario\n        this._userService.getUserByName(this.user.name).subscribe(\n            response => {\n                if(response.user.length){\n                    this.message = 'Ya existe el usuario introducido';\n                    this.okMessage = false;\n                    this.errorMessage = true;\n                }else{\n                    this._userService.createUser(this.user).subscribe(\n                        response => {\n                            if(response.user){\n                                console.log(response.user);\n                                this.errorMessage = false;\n                                this.okMessage = true;\n                            }\n                        },\n                        error => {\n                            console.log(<any>error);\n                            this.message = 'Error al registrar el usuario';\n                            this.errorMessage = true;\n                            this.okMessage = false;\n                        }\n                    );\n                }\n            },\n            error => {\n                console.log(<any>error);\n            }\n        )\n    }\n\n    // Utilizaremos esta clase para validar que los campos no se dejen en blanco\n    onBlurName(){\n        this.errorMessage = false;\n        this.okMessage = false;\n        this.nameEmpty = this.user.name == '' ? true : false;\n        console.log(this.errorMessage);\n    }\n\n    onFocusName(){\n        this.nameEmpty = false;\n    }\n\n    onBlurPassword(){\n        this.passwordEmpty = this.user.password == '' ? true : false;\n        this.errorMessage = false;\n        this.okMessage = false;\n    }\n\n    onFocusPassword(){\n        this.passwordEmpty = false;\n    }\n\n}\n","<header class='header'>\n    <h1>{{ title }}</h1>\n    <div (click)='openNewTask()' class='add-task'>\n        <i id='icon-add'\n           class=\"fa fa-plus-circle fa-2x\"></i>\n    </div>\n</header>\n<div class=\"tasks\">\n    <article *ngIf='newTask' class='task'>\n        <form #newTaskForm='ngForm'>\n            <div class='category-block'>\n                <label for=\"category\">Categoría</label>\n                <select class='category'\n                        name='category'\n                        #categoryId = 'ngModel'\n                        [(ngModel)]='taskCategory'\n                        required>\n                    <option></option>\n                    <option *ngFor='let category of categories'\n                            [value]='category._id'>{{ category.name }}</option>\n                </select>\n            </div>\n            <div class='date-block'>\n                <label for=\"date\">Fecha</label>\n                <input type='text'\n                       name='newTaskDate'\n                       placeholder=\"dd-mm-aaaa\"\n                       [(ngModel)]='newTaskDate'\n                       required />\n            </div>\n            <div class=\"clearfix\"></div>\n            <textarea class='newTask'\n                      name='newTask'\n                      rows='5'\n                      #newTask\n                      [(ngModel)]='newTaskDescription'\n                      required>\n            </textarea>\n            <div class='icons-bar'>\n                <button (click)='closeNewTask()'><i class=\"fas fa-times-circle\"></i></button>\n                <button [disabled]='!newTaskForm.valid' (click)='createTask(newTaskDescription, newTaskDate, taskCategory)'><i class=\"fas fa-save\"></i></button>\n            </div>\n        </form>\n    </article>\n    <article *ngFor='let task of tasks | taskOrder' class='task'>\n        <span class='date'\n            contenteditable='true'\n            spellcheck='false'\n            [textContent]='task.date'\n            (input)='task.date=$event.target.textContent'\n            required></span>\n        <div class='category-block'>\n            <label for=\"category\">Categoría</label>\n            <select class='category'\n                    name='category'\n                    #categoryId = 'ngModel'\n                    [(ngModel)]='task.categoryId'\n                    (change)='clearErrors()'\n                    required>\n                <option></option>\n                <option *ngFor='let category of categories'\n                        [value]='category._id'>{{ category.name }}</option>\n            </select>\n        </div>\n        <div class=\"clearfix\"></div>\n        <p contenteditable='true'\n           spellcheck='false'\n           [textContent]='task.description'\n           (input)=\"task.description=$event.target.textContent\"\n           (keypress)='clearErrors()'\n           required>\n        </p>\n        <div class='icons-bar'>\n            <button (click)='upgradeTask(task._id, task.description, task.date, task.categoryId)' title='Pasar a importante'><i class=\"fas fa-arrow-alt-circle-up\"></i></button>\n            <button (click)='openAssignment(task._id, task.description, task.date, task.categoryId)' title='Assignar a alguien'><i class=\"fas fa-hand-point-right\"></i></button>\n            <button (click)='deleteTask(task._id)'><i class=\"fas fa-trash-alt\" title='Eliminar tarea'></i></button>\n            <button (click)='completeTask(task._id, task.description, task.date, task.categoryId)' title='Completar tarea'><i class=\"fas fa-check\"></i></button>\n            <button (click)='updateTask(task._id, task.description, task.date, task.categoryId)' title='Guardar tarea'><i class=\"fas fa-save\"></i></button>\n        </div>\n    </article>\n    <div *ngIf='inputError' class=\"errorMessage\">\n        <span>{{ errorMessage }}</span>\n    </div>\n    <div *ngIf='taskAssigned' class='assignation'>\n        <label for=\"assigned\">Asignar a </label>\n        <select name='assigned'\n                #assignationId = 'ngModel'\n                [(ngModel)]='_assignationId'\n                required>\n            <option></option>\n            <option *ngFor='let assignation of assignations'\n                    [value]='assignation._id'>{{ assignation.name }}</option>\n        </select>\n        <span class='assignButton' (click)='assignTask()'><i class=\"fas fa-check\"></i></span>\n        <span class='closeAssignmentButton' (click)='closeAssignment()'><i class=\"fas fa-times-circle\"></i></span>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild,\n    ElementRef, Input }                                 from '@angular/core';\n\n// Models\nimport { Task }                                         from '../../models/task';\nimport { Category }                                     from '../../models/category';\nimport { Assignation }                                  from '../../models/assignation';\n\n// Custom services\nimport { UserService }                                  from '../../services/user.service';\nimport { TaskService }                                  from '../../services/task.service';\nimport { CategoryService }                              from '../../services/category.service';\nimport { AssignationService }                           from '../../services/assignation.service';\n\n@Component({\nselector: 'secondary',\ntemplateUrl: './secondary.component.html',\nstyleUrls: ['./secondary.component.css'],\nproviders: [TaskService, CategoryService, AssignationService, UserService]\n})\nexport class SecondaryComponent implements OnInit {\n\npublic newTask: boolean;\npublic tasks: Task[];\npublic task: Task;\npublic categories: Category[];\npublic assignations: Assignation[];\npublic taskCategory: String;\npublic title: String;\npublic newTaskDate: String;\npublic newTaskDescription: String;\npublic taskAssigned: boolean;\npublic _assignationId: String;\npublic userId: String;\npublic errorMessage: String;\npublic inputError: boolean;\n\n@Input() userName: String;\n@ViewChild('newTask', {static: false}) newTaskComponent: ElementRef;\n\nconstructor(\n   private _taskService: TaskService,\n   private _categoryService: CategoryService,\n   private _assignationService: AssignationService,\n   private _userService: UserService\n){\n   this.title = 'Tareas Secundarias';\n   this.newTask = false;\n   this.categories = [];\n   this.tasks = [];\n   this.taskAssigned = false;\n   this.inputError = false;\n}\n\nngOnInit() {\n   this.getUserId(this.userName);\n}\n\nopenNewTask(): void{\n   this.newTask = true;\n   this.taskCategory = '';\n   this.newTaskDate = '';\n   this.newTaskDescription = '';\n   /* Utilizamos el setTimeout para dar tiempo a que se cargue el componente\n      html. Si lo hacemos inmediatamente, al estar sujeto al *ngIf, dará\n      nulo\n   */\n   setTimeout(() => {\n       this.newTaskComponent.nativeElement.innerHTML = '';\n       this.newTaskComponent.nativeElement.focus();\n   }, 100);\n}\n\ncloseNewTask(): void{\n   this.newTask = false;\n}\n\ngetTasks(): void{\n   this._taskService.getSecondaryTasks(this.userId).subscribe(\n       response => {\n           if(response.tasks){\n               this.tasks = response.tasks;\n           }\n       },\n       error => {\n           console.log(<any>error);\n       }\n   );\n}\n\ngetCategories(): void{\n   this._categoryService.getCategories(this.userId).subscribe(\n       response => {\n           if(response.categories){\n               this.categories = response.categories;\n           }\n       },\n       error => {\n           console.log(<any>error);\n       }\n   );\n}\n\ngetAssignations(): void{\n   this._assignationService.getAssignations(this.userId).subscribe(\n       response => {\n           if(response.assignations){\n               this.assignations = response.assignations;\n           }\n       },\n       error => {\n           console.log(<any>error);\n       }\n   );\n}\n\ngetUserId(userName: String): void{\n   this._userService.getUserByName(userName).subscribe(\n       response => {\n           if(response.user){\n               this.userId = response.user[0]._id;\n               this.getCategories();\n               this.getAssignations();\n               this.getTasks();\n           }\n       },\n       error => {\n           console.log(<any>error);\n       }\n   );\n}\n\nopenAssignment(taskId: String, description: String, date: String, categoryId: String): void{\n   if(description == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la descripción de la tarea';\n       return;\n   }\n   if(date == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la fecha de la tarea';\n       return;\n   }\n   if(categoryId == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la categoría de la tarea';\n       return;\n   }\n   this.taskAssigned = true;\n   this.task = new Task(taskId,\n                        this.userId,\n                        description,\n                        date,\n                        'P',\n                        true,\n                        categoryId,\n                        'none');\n}\n\ncloseAssignment(): void{\n   this.taskAssigned = false;\n}\n\nclearErrors(){\n   this.inputError = false;\n   this.errorMessage = '';\n}\n\n/******************* MÉTODOS DE ESCRITURA EN LA BBDD *************/\ncreateTask(description: String, date: String, categoryId: String): void{\n   if(description == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la descripción de la tarea';\n       return;\n   }\n   if(date == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la fecha de la tarea';\n       return;\n   }\n   if(categoryId == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la categoría de la tarea';\n       return;\n   }\n   this.task = new Task('',\n                        this.userId,\n                        description,\n                        date,\n                        'P',\n                        false,\n                        categoryId,\n                        'none');\n   this._taskService.createTask(this.task).subscribe(\n       response => {\n           if(response.task){\n               this.newTask = false;\n               this.getTasks();\n               this.clearErrors();\n           }\n       },\n       error => {\n           console.log(<any>error);\n           this.inputError = true;\n           this.errorMessage = 'Error al crear la tarea';\n       }\n   );\n}\n\nupgradeTask(taskId: String, description: String, date: String, categoryId: String): void{\n   if(description == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la descripción de la tarea';\n       return;\n   }\n   if(date == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la fecha de la tarea';\n       return;\n   }\n   if(categoryId == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la categoría de la tarea';\n       return;\n   }\n   this.task = new Task(taskId,\n                        this.userId,\n                        description,\n                        date,\n                        'P',\n                        true,\n                        categoryId,\n                        'none');\n    this._taskService.updateTask(taskId, this.task).subscribe(\n       response => {\n           if(response.task){\n               this.getTasks();\n               this.clearErrors();\n           }\n       },\n       error => {\n           this.inputError = true;\n           this.errorMessage = 'Error al modificar la tarea';\n           console.log(<any>error);\n       }\n   );\n}\n\nupdateTask(taskId: String, description: String, date: String, categoryId: String): void{\n   // Validaciones\n   if(description == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la descripción de la tarea';\n       return;\n   }\n   if(date == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la fecha de la tarea';\n       return;\n   }\n   if(categoryId == ''){\n       this.inputError = true;\n       this.errorMessage = 'Introduce la categoría de la tarea';\n       return;\n   }\n   this.task = new Task(taskId,\n                        this.userId,\n                        description,\n                        date,\n                        'P',\n                        false,\n                        categoryId,\n                        'none');\n   this._taskService.updateTask(taskId, this.task).subscribe(\n       response => {\n           if(response.task){\n               this.getTasks();\n               this.clearErrors();\n           }\n       },\n       error => {\n           this.inputError = true;\n           this.errorMessage = 'Error al modificar la tarea';\n           console.log(<any>error);\n       }\n   );\n}\n\ncompleteTask(taskId: String, description: String, date: String, categoryId: String): void{\n    if(confirm('Estás seguro de que quieres marcar como completada esta tarea?')){\n        if(description == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la descripción de la tarea';\n            return;\n        }\n        if(date == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la fecha de la tarea';\n            return;\n        }\n        if(categoryId == ''){\n            this.inputError = true;\n            this.errorMessage = 'Introduce la categoría de la tarea';\n            return;\n        }\n        this.task = new Task(taskId,\n                                this.userId,\n                                description,\n                                date,\n                                'C',\n                                false,\n                                categoryId,\n                                'none');\n        this._taskService.updateTask(taskId, this.task).subscribe(\n            response => {\n                if(response.task){\n                    this.getTasks();\n                    this.clearErrors();\n                }\n            },\n            error => {\n                this.inputError = true;\n                this.errorMessage = 'Error al completar la tarea';\n                console.log(<any>error);\n            }\n        );\n    }\n}\n\nassignTask(): void{\n    if(this.task && this._assignationId){\n        this.task.assignationId = this._assignationId;\n        console.log(this.task);\n        this._taskService.updateTask(this.task._id, this.task).subscribe(\n            response => {\n                if(response.task){\n                    this.getTasks();\n                    this.taskAssigned = false;\n                    this.clearErrors();\n                }\n            },\n            error => {\n                console.log(<any>error);\n                this.inputError = true;\n                this.errorMessage = 'Error al asignar la tarea';\n            }\n        );\n    }\n}\n\ndeleteTask(taskId: String): void{\n    if(confirm('Estás seguro de que quieres borrar definitivamente esta tarea?')){\n        this._taskService.deleteTask(taskId).subscribe(\n            response => {\n                if(response.task){\n                    this.getTasks();\n                    this.clearErrors();\n                }\n            },\n            error => {\n                console.log(<any>error);\n                this.inputError = true;\n                this.errorMessage = 'Error al eliminar la tarea';\n            });\n        }\n    }\n}\n","export class Assignation{\r\n    constructor(\r\n        public _id: String,\r\n        public userId: String,\r\n        public name: String\r\n    ){}\r\n}\r\n","export class Category{\r\n    constructor(\r\n        public _id: String,\r\n        public userId: String,\r\n        public name: String\r\n    ){}\r\n}\r\n","export class Task{\r\n    constructor(\r\n        public _id: String,\r\n        public userId: String,\r\n        public description: String,\r\n        public date: String,\r\n        public status: String,\r\n        public important: Boolean,\r\n        public categoryId: String,\r\n        public assignationId: String\r\n    ){}\r\n}\r\n","export class User{\r\n    constructor(\r\n        public name: String,\r\n        public password: String\r\n    ){}\r\n}\r\n","import { Pipe, PipeTransform }\t\t\t\tfrom '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'taskOrder'\r\n})\r\nexport class TaskOrderPipe implements PipeTransform{\r\n\ttransform(value: any[]): any[]{\r\n        let column: String;\r\n\r\n\t\tif(value.length == 1) return value;\r\n\r\n\t\tconst sortedValue = this.orderBy(value);\r\n\t\treturn sortedValue;\r\n\t}\r\n\r\n\torderBy(value: String[]){\r\n        let changes = false;\r\n        let result;\r\n\t\tconst sortedArray: String[] = value.sort((a: any, b: any): number =>{\r\n\r\n            const yearA = a['date'].substring(6,10);\r\n            const monthA = a['date'].substring(3,5);\r\n            const dayA = a['date'].substring(0,2);\r\n\r\n            const yearB = b['date'].substring(6,10);\r\n            const monthB = b['date'].substring(3,5);\r\n            const dayB = b['date'].substring(0,2);\r\n\r\n            const dateA = yearA + monthA + dayA;\r\n            const dateB = yearB + monthB + dayB;\r\n\r\n            const dateAInt = parseInt(dateA);\r\n            const dateBInt = parseInt(dateB);\r\n\r\n            if(dateAInt > dateBInt) result = 1;\r\n            if(dateAInt < dateBInt) result = -1;\r\n            if(dateAInt == dateBInt) result = 0;\r\n\r\n            return result;\r\n\t\t});\r\n\r\n        return sortedArray.reverse();\r\n\t}\r\n}\r\n","import { Injectable, RootRenderer }     from '@angular/core';\r\nimport { HttpClient, HttpHeaders }      from '@angular/common/http';\r\nimport { Observable }                   from 'rxjs';\r\n\r\n// Variables globales\r\nimport { Global }                       from './global.service';\r\n\r\n// Model\r\nimport { Assignation }                  from '../models/assignation';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AssignationService{\r\n    public url: String;\r\n    public headers: HttpHeaders;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = Global.url;\r\n        this.headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n    }\r\n\r\n    getAssignations(userId: String): Observable<any>{\r\n        // Montamos la url de parámetros para el filtro\r\n        const url = this.url + 'assignations?userId=' + userId;\r\n        return this._http.get(url, {headers: this.headers});\r\n    }\r\n\r\n    createAssignation(assignation: Assignation): Observable<any>{\r\n        const params = JSON.stringify(assignation);\r\n        return this._http.post(this.url + 'createAssignation', params, {headers: this.headers});\r\n    }\r\n\r\n    updateAssignation(id: String, assignation: Assignation): Observable<any>{\r\n        return this._http.put(this.url + 'assignation/' + id, assignation, {headers: this.headers})\r\n    }\r\n\r\n    deleteAssignation(id: String): Observable<any>{\r\n        return this._http.delete(this.url + 'assignation/' + id, {headers: this.headers});\r\n    }\r\n}\r\n","import { Injectable, RootRenderer }     from '@angular/core';\r\nimport { HttpClient, HttpHeaders }      from '@angular/common/http';\r\nimport { Observable }                   from 'rxjs';\r\n\r\n// Variables globales\r\nimport { Global }                       from './global.service';\r\n\r\n// Model\r\nimport { Category }                     from '../models/category';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService{\r\n    public url: String;\r\n    public headers: HttpHeaders;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = Global.url;\r\n        this.headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n    }\r\n\r\n    getCategories(userId: String): Observable<any>{\r\n        // Montamos la url de parámetros para el filtro\r\n        const url = this.url + 'categories?userId=' + userId;\r\n        return this._http.get(url, {headers: this.headers});\r\n    }\r\n\r\n    createCategory(category: Category): Observable<any>{\r\n        const params = JSON.stringify(category);\r\n        return this._http.post(this.url + 'createCategory', params, {headers: this.headers});\r\n    }\r\n\r\n    updateCategory(id: String, category: Category): Observable<any>{\r\n        return this._http.put(this.url + 'category/' + id, category, {headers: this.headers})\r\n    }\r\n\r\n    deleteCategory(id: String): Observable<any>{\r\n        return this._http.delete(this.url + 'category/' + id, {headers: this.headers});\r\n    }\r\n}\r\n","export const Global = {\n    url: 'http://localhost:3700/api/'\n}\n","import { Injectable, RootRenderer }     from '@angular/core';\r\nimport { HttpClient, HttpHeaders }      from '@angular/common/http';\r\nimport { Observable }                   from 'rxjs';\r\n\r\n// Variables globales\r\nimport { Global }                       from './global.service';\r\n\r\n// Model\r\nimport { Task }                         from '../models/task';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TaskService{\r\n    public url: String;\r\n    public headers: HttpHeaders;\r\n\r\n    constructor(private _http: HttpClient){\r\n        this.url = Global.url;\r\n        this.headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n    }\r\n\r\n    getTasks(userId: String): Observable<any>{\r\n        // Montamos la url de parámetros para el filtro\r\n        const url = this.url + 'tasks?status=C&userId=' + userId;\r\n        return this._http.get(url, {headers: this.headers});\r\n    }\r\n\r\n    getImportantTasks(userId: String): Observable<any>{\r\n        // Montamos la url de parámetros para el filtro\r\n        const url = this.url + 'tasks?important=true&status=P&assignationId=none&userId=' + userId;\r\n        return this._http.get(url, {headers: this.headers});\r\n    }\r\n\r\n    getAllTasksByCategory(categoryId: String, userId: String): Observable<any>{\r\n        const url = this.url + 'tasks?status=P&assignationId=none&userId=' + userId + '&categoryId=' + categoryId;\r\n        return this._http.get(url, {headers: this.headers});\r\n    }\r\n\r\n    getAllTasksByAssignation(assignationId: String, userId: String): Observable<any>{\r\n        const url = this.url + 'tasks?status=P&assignationId=' + assignationId + '&userId=' + userId;\r\n        return this._http.get(url, {headers: this.headers});\r\n    }\r\n\r\n    getSecondaryTasks(userId: String): Observable<any>{\r\n        // Montamos la url de parámetros para el filtro\r\n        const url = this.url + 'tasks?important=false&status=P&assignationId=none'\r\n        return this._http.get(url, {headers: this.headers});\r\n    }\r\n\r\n    createTask(task: Task): Observable<any>{\r\n        const params = JSON.stringify(task);\r\n        return this._http.post(this.url + 'createTask', params, {headers: this.headers});\r\n    }\r\n\r\n    updateTask(id: String, task: Task): Observable<any>{\r\n        const params = JSON.stringify(task);\r\n        return this._http.put(this.url + 'task/' + id, params, {headers: this.headers});\r\n    }\r\n\r\n    deleteTask(id: String): Observable<any>{\r\n        return this._http.delete(this.url + 'task/' + id, {headers: this.headers});\r\n    }\r\n\r\n}\r\n","import { Injectable }               from '@angular/core';\nimport { HttpClient, HttpHeaders}   from '@angular/common/http';\nimport { Observable }               from 'rxjs';\n\n// Variables globales\nimport { Global }                   from './global.service';\n\n// Model\nimport { User }                     from '../models/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    private url: String;\n    private headers: HttpHeaders;\n    private loggedIn: Boolean;\n\n    constructor(private _http: HttpClient){\n        this.url = Global.url;\n        this.headers = new HttpHeaders().set('Content-Type','application/json');\n        this.loggedIn = false;\n    }\n\n    createUser(user: User): Observable<any>{\n        const params = JSON.stringify(user);\n        return this._http.post(this.url + 'saveUser',  params, {headers: this.headers});\n    }\n\n    getUserByName(name: String): Observable<any>{\n        return this._http.get(this.url + 'userByName/' + name, {headers: this.headers});\n    }\n\n    authenticate(user: User): Observable<any>{\n        const params = JSON.stringify(user);\n        return this._http.post(this.url + 'authentication', params, {headers: this.headers});\n    }\n\n    setUserLoggedIn(username: String){\n        localStorage.setItem('currentUser', JSON.stringify(username));\n        this.loggedIn = true;\n    }\n\n    getUserLoggedIn(){\n        return JSON.parse(localStorage.getItem('currentUser'));\n    }\n\n    isLoggedIn(){\n        return this.loggedIn;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}